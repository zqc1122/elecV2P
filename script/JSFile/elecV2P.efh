<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <meta name="theme-color" content="var(--main-bk)">
  <meta name="viewport" content="width=device-width,initial-scale=1,viewport-fit=cover">
  <title>efh - 一种 html 扩展格式</title>
  <style type="text/css">
    :root {
      --main-bk: #003153;
      --main-fc: #FAFAFD;
      --main-cl: #2890EE;
      --note-bk: #EF7A82;
      --secd-fc: #003153B8;
      --green-bk: #66FF0088;
    }
    html, body {
      margin: 0;
      padding: 0;
      max-width: 100%;
      font-size: 16px;
      letter-spacing: 1px;
      word-break: break-word;
      scroll-behavior: smooth;
      font-family: 'Microsoft YaHei',-apple-system,Helvetica,Arial;
    }
    body {
      padding: 0 1em;
      background: var(--main-bk);
      color: var(--main-fc);
    }
    a {
      color: var(--main-cl);
    }
    .eflex {
      display: inline-flex;
      justify-content: space-between;
      align-items: center;
      align-content: center;
    }
    .eflex--wrap {
      flex-wrap: wrap;
    }
    .einput, .ebutton {
      height: 32px;
      min-width: 72px;
      box-sizing: border-box;
      padding: 0 6px;
      margin: 3px;
      border: none;
      border-radius: .5em;
      font-size: 18px;
    }
    .ebutton {
      background: var(--main-cl);
      color: var(--main-fc);
      cursor: pointer;
    }
    .result {
      white-space: pre-wrap;
    }
  </style>
</head>
<body><noscript><strong>Please enable JavaScript to continue.</strong></noscript>
<h3>efh - elecV2P favend html, 一个同时包含前后端运行代码的 html 扩展格式。</h3>
<p>目前仅可运行于 elecV2P。相关说明参考：<a href="https://github.com/elecV2/elecV2P-dei/blob/master/docs/08-logger&efss.md" target="_blank">elecV2P-dei/efss.md</a> EFSS 相关部分</p>
<div class="eflex eflex--wrap">
  <label>请求后台数据测试 $fend:</label>
  <input type="text" name="test" class="einput key" placeholder="akey">
  <input type="text" name="test" class="einput data" placeholder="data" onkeyup="event.keyCode===13&&dataFetch()">
  <button class="ebutton" onclick="dataFetch()">获取</button>
</div>
<div>
  <p>$fend 返回结果：</p>
  <p class="result"></p>
</div>
<p>
  <label>该 efh 文件地址: </label>
  <a href='https://raw.githubusercontent.com/elecV2/elecV2P/master/script/JSFile/elecV2P.efh' target='_blank'>https://raw.githubusercontent.com/elecV2/elecV2P/master/script/JSFile/elecV2P.efh</a>
</p>

<!-- 前端部分可使用多个 script 标签引入远程 axios/vue/react 等框架文件
<script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>

<script src="https://unpkg.com/react@18/umd/react.production.min.js"></script>
<script src="https://unpkg.com/react-dom@18/umd/react-dom.production.min.js"></script>
<script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>

<script src="https://cdn.tailwindcss.com"></script>
-->
<script type="text/javascript">
  function dataFetch() {
    let key = document.querySelector('.key').value;
    let data = document.querySelector('.data').value;
    let ress = document.querySelector('.result');
    // v3.7.2 之后可使用内置的简易 $ 选择噐函数，比如：
    // let key = $('.key').value, data = $('.data').value;
    console.log('send data to $fend', key, data);

    // $fend 默认函数用于前后端数据交互
    $fend(key, data).then(res=>res.text()).then(res=>{
      console.log(res);
      ress.innerText = res;
    }).catch(e=>{
      ress.innerText = e.message;
    });
  }
</script>

<!-- 后台代码仅能使用一个 script 标签 -->
<!-- 使用 runon="elecV2P" 属性来表示此部分是运行在后台的代码 -->
<!-- v3.6.7 之后可简写为 <script favend>  -->
<script type="text/javascript" runon="elecV2P">
  // 后台 $fend 第一参数需与前端对应，第二参数为返回数据
  $fend('akey', {
    hello: 'elecV2P favend',
    data: $store.get('cookieKEY'),
    reqbody: $request.body
  });
  $done('no $fend match, try akey');
</script>
</body>
</html>